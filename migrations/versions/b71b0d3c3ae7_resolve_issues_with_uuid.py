"""Resolve Issues with uuid

Revision ID: b71b0d3c3ae7
Revises: 9d8c4792aa03
Create Date: 2024-09-07 15:06:19.694115

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b71b0d3c3ae7'
down_revision = '9d8c4792aa03'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('farms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.drop_index('ix_farms_user_id')
        batch_op.create_index(batch_op.f('ix_farms_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_farms_owner_id'), ['owner_id'], unique=False)
        batch_op.drop_constraint('farms_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('flocks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('deaths', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('sold', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))

    with op.batch_alter_table('health_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('vaccinated', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('vaccination_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('cost', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))
        batch_op.create_index(batch_op.f('ix_inventory_category'), ['category'], unique=False)

    with op.batch_alter_table('production', schema=None) as batch_op:
        batch_op.add_column(sa.Column('eggs_sold', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('farm_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=False))
        batch_op.create_index(batch_op.f('ix_production_farm_id'), ['farm_id'], unique=False)
        batch_op.create_foreign_key(None, 'farms', ['farm_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_username')
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.create_index('ix_users_username', ['username'], unique=True)

    with op.batch_alter_table('production', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_production_farm_id'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('farm_id')
        batch_op.drop_column('eggs_sold')

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_category'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('cost')
        batch_op.drop_column('category')

    with op.batch_alter_table('health_records', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('vaccination_date')
        batch_op.drop_column('vaccinated')

    with op.batch_alter_table('flocks', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('sold')
        batch_op.drop_column('deaths')

    with op.batch_alter_table('farms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('farms_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_farms_owner_id'))
        batch_op.drop_index(batch_op.f('ix_farms_location'))
        batch_op.create_index('ix_farms_user_id', ['user_id'], unique=False)
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###
